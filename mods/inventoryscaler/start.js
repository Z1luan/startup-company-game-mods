let _modPath;function updateInventoryLogInverse(t,n=.5,e=2,o=1){if(!t||"object"!=typeof t)throw new TypeError("Expected inventory to be a non-null object");const r=Object.entries(t).filter((([,t])=>"number"==typeof t&&Number.isFinite(t)));if(0===r.length)return{...t};const i=r.map((([,t])=>t)),a=5*Math.max(...i),c=computeIQR(i),u=Math.max(c*n,o),h={...t};for(const[t,n]of r){const o=n/a,r=u*Math.pow(1-o,e);h[t]=Math.round(n+r)}return h}function computeIQR(t){if(!t.length)return 0;const n=[...t].sort(((t,n)=>t-n)),e=.25*(n.length+1),o=.75*(n.length+1);function r(t){const e=Math.floor(t)-1,o=t-Math.floor(t);return e+1>=n.length?n[n.length-1]:n[e]+o*(n[e+1]-n[e])}const i=r(e);return r(o)-i}exports.initialize=t=>{_modPath=t},exports.onNewDay=t=>{t.inventory=updateInventoryLogInverse(t.inventory)};